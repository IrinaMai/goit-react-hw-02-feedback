{"version":3,"sources":["components/Section.js","components/Statistic.js","App.js","index.js"],"names":["Section","title","Statistic","good","neutral","bad","total","positivePercentage","App","state","addStatistic","evt","name","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","type","onClick","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8MAEe,SAASA,EAAQC,GAC5B,OACI,cAACD,EAAD,UACI,6BAAKC,MCFjB,IAYeC,EAZG,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC3C,OACI,+BACI,wCAAU,+BAAOJ,OACjB,2CAAa,+BAAOC,OACpB,uCAAS,+BAAOC,OAChB,yCAAW,+BAAOC,OAClB,sDAAwB,iCAAOC,EAAP,cCJfC,E,4MAEnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,aAAe,SAACC,GACd,IAAMC,EAAOD,EAAIE,OAAOD,KACxB,EAAKE,UAAS,SAACC,GACb,OAAO,eAAEH,EAAQG,EAAKH,GAAO,O,EAIjCI,mBAAoB,WAElB,OADe,EAAKP,MAAMN,KAAO,EAAKM,MAAMJ,IAAM,EAAKI,MAAML,S,EAK/Da,gCAAkC,WAEhC,OADyBC,KAAKC,MAAyB,IAAlB,EAAKV,MAAMN,KAAc,EAAKa,uB,uDAKnE,OACE,qCACA,oCACE,2DACA,wBAAQI,KAAK,SAASR,KAAK,OAAOS,QAAWC,KAAKZ,aAAlD,kBACA,wBAAQU,KAAK,SAASR,KAAK,UAAUS,QAAWC,KAAKZ,aAArD,qBACA,wBAAQU,KAAK,SAASR,KAAM,MAAMS,QAAWC,KAAKZ,aAAlD,oBAGA,cAACV,EAAD,CAASC,MAAM,cAEf,cAAC,EAAD,CACEE,KAAMmB,KAAKb,MAAMN,KACjBC,QAASkB,KAAKb,MAAML,QACpBC,IAAKiB,KAAKb,MAAMJ,IAChBC,MAAOgB,KAAKN,qBACVT,mBAAoBe,KAAKL,2C,GA3CJM,aCCjCC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6fc6117e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Section(title) {\r\n    return (\r\n        <Section>\r\n            <h2>{title}</h2>\r\n        </Section>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nconst Statistic = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <ul>\r\n            <li>Good: <span>{good}</span></li>\r\n            <li>Neutral: <span>{neutral}</span></li>\r\n            <li>Bad: <span>{bad}</span></li>\r\n            <li>Total: <span>{total}</span></li>\r\n            <li>Positive statistic: <span>{positivePercentage}%</span></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Statistic","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistic from './components/Statistic';\n\n\n\nexport default class App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  addStatistic = (evt) => {\n    const name = evt.target.name;\n    this.setState((prev) => {\n      return {[name] : prev[name] +1}\n    })\n  }\n \n  countTotalFeedback =() =>{\n    const total = (this.state.good + this.state.bad + this.state.neutral)\n    return total\n    \n  }\n\n  countPositiveFeedbackPercentage = () =>{\n    const positiveFeedback = Math.round((this.state.good * 100) / this.countTotalFeedback())\n    return positiveFeedback\n  }\n\n  render() {\n    return (\n      <>\n      <section>\n        <h2>Please leve your feedback</h2>\n        <button type=\"button\" name=\"good\" onClick = {this.addStatistic}>Good</button>\n        <button type=\"button\" name=\"neutral\" onClick = {this.addStatistic} >Neutral</button>\n        <button type=\"button\" name =\"bad\" onClick = {this.addStatistic}>Bad</button>\n        </section>\n\n        <Section title=\"statistic\"></Section>\n\n        <Statistic\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()} />\n\n\n  </>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}